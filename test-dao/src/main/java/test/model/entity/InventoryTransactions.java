package test.model.entity;
// Generated 2018/2/4 ¤U¤È 03:34:56 by Hibernate Tools 5.1.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * InventoryTransactions generated by hbm2java
 */
@Entity
@Table(name = "inventory_transactions", catalog = "northwind")
public class InventoryTransactions implements java.io.Serializable {

	private Integer id;
	private InventoryTransactionTypes inventoryTransactionTypes;
	private Orders orders;
	private Products products;
	private PurchaseOrders purchaseOrders;
	private Date transactionCreatedDate;
	private Date transactionModifiedDate;
	private int quantity;
	private String comments;
	private Set<PurchaseOrderDetails> purchaseOrderDetailses = new HashSet<PurchaseOrderDetails>(0);

	public InventoryTransactions() {
	}

	public InventoryTransactions(InventoryTransactionTypes inventoryTransactionTypes, Products products, int quantity) {
		this.inventoryTransactionTypes = inventoryTransactionTypes;
		this.products = products;
		this.quantity = quantity;
	}

	public InventoryTransactions(InventoryTransactionTypes inventoryTransactionTypes, Orders orders, Products products,
			PurchaseOrders purchaseOrders, Date transactionCreatedDate, Date transactionModifiedDate, int quantity,
			String comments, Set<PurchaseOrderDetails> purchaseOrderDetailses) {
		this.inventoryTransactionTypes = inventoryTransactionTypes;
		this.orders = orders;
		this.products = products;
		this.purchaseOrders = purchaseOrders;
		this.transactionCreatedDate = transactionCreatedDate;
		this.transactionModifiedDate = transactionModifiedDate;
		this.quantity = quantity;
		this.comments = comments;
		this.purchaseOrderDetailses = purchaseOrderDetailses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "transaction_type", nullable = false)
	public InventoryTransactionTypes getInventoryTransactionTypes() {
		return this.inventoryTransactionTypes;
	}

	public void setInventoryTransactionTypes(InventoryTransactionTypes inventoryTransactionTypes) {
		this.inventoryTransactionTypes = inventoryTransactionTypes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "customer_order_id")
	public Orders getOrders() {
		return this.orders;
	}

	public void setOrders(Orders orders) {
		this.orders = orders;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_id", nullable = false)
	public Products getProducts() {
		return this.products;
	}

	public void setProducts(Products products) {
		this.products = products;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "purchase_order_id")
	public PurchaseOrders getPurchaseOrders() {
		return this.purchaseOrders;
	}

	public void setPurchaseOrders(PurchaseOrders purchaseOrders) {
		this.purchaseOrders = purchaseOrders;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "transaction_created_date", length = 19)
	public Date getTransactionCreatedDate() {
		return this.transactionCreatedDate;
	}

	public void setTransactionCreatedDate(Date transactionCreatedDate) {
		this.transactionCreatedDate = transactionCreatedDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "transaction_modified_date", length = 19)
	public Date getTransactionModifiedDate() {
		return this.transactionModifiedDate;
	}

	public void setTransactionModifiedDate(Date transactionModifiedDate) {
		this.transactionModifiedDate = transactionModifiedDate;
	}

	@Column(name = "quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "comments")
	public String getComments() {
		return this.comments;
	}

	public void setComments(String comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "inventoryTransactions")
	public Set<PurchaseOrderDetails> getPurchaseOrderDetailses() {
		return this.purchaseOrderDetailses;
	}

	public void setPurchaseOrderDetailses(Set<PurchaseOrderDetails> purchaseOrderDetailses) {
		this.purchaseOrderDetailses = purchaseOrderDetailses;
	}

}
