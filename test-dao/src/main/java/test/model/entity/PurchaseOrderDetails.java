package test.model.entity;
// Generated 2018/2/4 ¤U¤È 03:34:56 by Hibernate Tools 5.1.6.Final

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PurchaseOrderDetails generated by hbm2java
 */
@Entity
@Table(name = "purchase_order_details", catalog = "northwind")
public class PurchaseOrderDetails implements java.io.Serializable {

	private Integer id;
	private InventoryTransactions inventoryTransactions;
	private Products products;
	private PurchaseOrders purchaseOrders;
	private BigDecimal quantity;
	private BigDecimal unitCost;
	private Date dateReceived;
	private boolean postedToInventory;

	public PurchaseOrderDetails() {
	}

	public PurchaseOrderDetails(PurchaseOrders purchaseOrders, BigDecimal quantity, BigDecimal unitCost,
			boolean postedToInventory) {
		this.purchaseOrders = purchaseOrders;
		this.quantity = quantity;
		this.unitCost = unitCost;
		this.postedToInventory = postedToInventory;
	}

	public PurchaseOrderDetails(InventoryTransactions inventoryTransactions, Products products,
			PurchaseOrders purchaseOrders, BigDecimal quantity, BigDecimal unitCost, Date dateReceived,
			boolean postedToInventory) {
		this.inventoryTransactions = inventoryTransactions;
		this.products = products;
		this.purchaseOrders = purchaseOrders;
		this.quantity = quantity;
		this.unitCost = unitCost;
		this.dateReceived = dateReceived;
		this.postedToInventory = postedToInventory;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "inventory_id")
	public InventoryTransactions getInventoryTransactions() {
		return this.inventoryTransactions;
	}

	public void setInventoryTransactions(InventoryTransactions inventoryTransactions) {
		this.inventoryTransactions = inventoryTransactions;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_id")
	public Products getProducts() {
		return this.products;
	}

	public void setProducts(Products products) {
		this.products = products;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "purchase_order_id", nullable = false)
	public PurchaseOrders getPurchaseOrders() {
		return this.purchaseOrders;
	}

	public void setPurchaseOrders(PurchaseOrders purchaseOrders) {
		this.purchaseOrders = purchaseOrders;
	}

	@Column(name = "quantity", nullable = false, precision = 18, scale = 4)
	public BigDecimal getQuantity() {
		return this.quantity;
	}

	public void setQuantity(BigDecimal quantity) {
		this.quantity = quantity;
	}

	@Column(name = "unit_cost", nullable = false, scale = 4)
	public BigDecimal getUnitCost() {
		return this.unitCost;
	}

	public void setUnitCost(BigDecimal unitCost) {
		this.unitCost = unitCost;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_received", length = 19)
	public Date getDateReceived() {
		return this.dateReceived;
	}

	public void setDateReceived(Date dateReceived) {
		this.dateReceived = dateReceived;
	}

	@Column(name = "posted_to_inventory", nullable = false)
	public boolean isPostedToInventory() {
		return this.postedToInventory;
	}

	public void setPostedToInventory(boolean postedToInventory) {
		this.postedToInventory = postedToInventory;
	}

}
